@{
    var globalAppSettings = _globalAppSettings;
    ViewBag.Title = T["Email Settings"].Value +" - " + globalAppSettings.SystemSettings.OrganizationName;
    var mailAuthenticationTypes = new List<SelectListItem>
{
        new SelectListItem { Value = "0", Text = T["Anonymous authentication"].Value, Selected = globalAppSettings.SystemSettings.MailSettingsAuthType == MailSettingsAuthType.Anonymous },
        new SelectListItem { Value = "1", Text = T["Basic authentication"].Value, Selected = globalAppSettings.SystemSettings.MailSettingsAuthType == MailSettingsAuthType.Basic }
    };
    var dashboardServerResourceUrl = globalAppSettings.SystemSettings.CDNLink.TrimEnd('/');
    var isEnableSSL = ViewBag.SystemSettings.MailSettingsIsSecureAuthentication;
    var loginUserEmail = _identityResponse.User.Email;
    var isSettingsTab = (string.IsNullOrWhiteSpace(Context.Request.Query["tab"]) || Context.Request.Query["tab"] == "email-settings") ? "active" : string.Empty;
    var isLogsTab = (Context.Request.Query["tab"].ToString() == "logs") ? "active" : string.Empty;
    var model = ViewBag.GranularPermissions as Dictionary<object, bool>;
    var scopeList = ServerAppConfig.SettingsScopesList;
    var canShowAdminMenu = _identityResponse.IsAdmin || model[SettingsScopes.All] || model.Select(x => x).Where(x => scopeList.Contains(x.Key.ToString()) && x.Value == true).Count() > 1 || (model.Select(x => x).Where(x => scopeList.Contains(x.Key.ToString()) && x.Value == true).Count() == 1 && (model[PermissionEntity.UsersandGroups] || model[PermissionEntity.SpecificGroup] || model[PermissionEntity.AllGroups])) || model[PermissionEntity.UsersandGroups];
}

@section styles{
    <environment include="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/site-settings.css" />
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <link rel="stylesheet" asp-append-version="true" href="@dashboardServerResourceUrl/cdn/css/site-settings.min.css" />
    </environment>
}
@section scripts{
    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/site-settings.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/site-settings.min.js"></script>
    </environment>
    <script>
        var dashboardServerResourceUrl = "@globalAppSettings.SystemSettings.CDNLink";
        var SystemSettingsProperties = @Html.Raw(Json.Serialize(ViewBag.SystemSettings));
        var updateEmailSettingsUrl = "@Url.Action("UpdateEmailSettings", "Administration")";
        var sentTestMail = "@Url.Action("SentTestMail", "Administration")";
        var loginUserEmail = "@loginUserEmail";
    </script>
}

@section MainSection{
    @await Html.PartialAsync("_AdminMenu")
    <div id="mail-settings-container" class="bi-page-container @(canShowAdminMenu ? string.Empty : "admin-panel-full-width")" role="tabpanel" aria-labelledby="email-settings">
        <div class="bi-page-content col-xs-12 no-padding">
            <div id="email-setting" class="bi-page-header tabs-header-padding col-md-12 col-lg-12 col-sm-12">
                <hgroup class="bi-page-header-description">
                    <h1 class="h2 page-title">
                        @T["Email Settings"]
                    </h1>
                    <h5 class="page-description">
                        @T["Configuration for sending emails from application."]
                    </h5>
                </hgroup>
            </div>
            <div class="col-xs-12 no-padding bi-page-nav-bar">
                <ul id="email-settings-tab-nav" class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="@isSettingsTab">
                        <a href="#email-settings" id="email-settings-tab" aria-controls="email-settings-tab" role="tab" data-toggle="tab">@T["Settings"]</a>
                    </li>
                    <li role="presentation" class="@isLogsTab">
                        <a href="#logs" id="email-logs-tab" aria-controls="email-activity-logs-tab" role="tab" data-toggle="tab">@T["Logs"]</a>
                    </li>
                </ul>
            </div>

            <div class="tab-content col-xs-12 no-padding">
                <div role="tabpanel" class="tab-pane bi-page-body @isSettingsTab" id="email-settings">
                    <div id="email-setting-body" class="col-xs-12 no-padding">
                        <form id="email-setting-form" class="row admin-page-form email-settings-section no-margin" autocomplete="off">
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("smtp-address", string.Format(T["{0} Server"].Value, "SMTP"), new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    <input type="text" id="smtp-address" class="form-control txt-holder validation-padding mail-settings-fields" name="smtp_address" placeholder="@string.Format(T["{0} server"].Value,"SMTP")" value="@ViewBag.SystemSettings.MailSettingsHost" />
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("port-number", string.Format(T["{0} port"].Value, "SMTP"), new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    <input type="text" id="port-number" class="form-control txt-holder validation-padding mail-settings-fields" name="port_number" placeholder="@string.Format(T["{0} Port"].Value,"SMTP")" value="@ViewBag.SystemSettings.MailSettingsPort" />
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("mail-display-name", T["Sender Name"].Value, new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    <input type="text" id="mail-display-name" class="form-control txt-holder validation-padding mail-settings-fields" name="mail_display_name" placeholder="@T["Sender name"]" value="@ViewBag.SystemSettings.MailSettingsSenderName" />
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("mail-user-name", T["Sender Email Address"].Value, new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    <input type="text" id="mail-user-name" class="form-control txt-holder validation-padding mail-settings-fields" name="mail_user_name" placeholder="@T["Sender email address"]" value="@ViewBag.SystemSettings.MailSettingsAddress" />
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("mail-authentication-type", T["Authentication Type"].Value, new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field dropdown-margin col-xs-12 no-padding">
                                    @Html.DropDownList("auth_type", mailAuthenticationTypes, new { @class = "selectpicker", id = "mail-authentication-type" })
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="form-group col-xs-12 no-padding">
                                @Html.Label("sender-user-name", T["Username"].Value, new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    @if (globalAppSettings.SystemSettings.MailSettingsAuthType == MailSettingsAuthType.Basic)
                                    {
                                        <input type="text" id="sender-user-name" class="form-control txt-holder validation-padding mail-settings-fields mail-credentials" name="sender_user_name" placeholder="@T["Username"]" value="@ViewBag.SystemSettings.MailSettingsUserName" />
                                    }
                                    else
                                    {
                                        <input type="text" id="sender-user-name" class="form-control txt-holder validation-padding mail-settings-fields mail-credentials" name="sender_user_name" placeholder="@T["Username"]" disabled="disabled" />
                                    }
                                    <span class="validation-errors"></span>
                                </div>
                            </div>
                            <div class="col-xs-12 no-padding">
                                @Html.Label("mail-password", T["Password"].Value, new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                <div class="form-input-field col-xs-12 no-padding">
                                    <input type="text" class="hidden-input" style="display: none;">
                                    <input style="visibility: hidden; position: absolute; left: -99999px" class="hidden-input" type="password" name="fake_passwordfield_to_turnoff_autocomplete">
                                    @if (globalAppSettings.SystemSettings.MailSettingsAuthType == MailSettingsAuthType.Basic)
                                    {
                                        <input type="password" id="mail-password" class="form-control txt-holder validation-padding mail-settings-fields mail-credentials" name="mail_password" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" />
                                    }
                                    else
                                    {
                                        <input type="password" id="mail-password" class="form-control txt-holder validation-padding mail-settings-fields mail-credentials" name="mail_password" placeholder="&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;&#9679;" disabled="disabled" />
                                    }
                                    <div class="show-hide-password su su-eye"></div>
                                    <span class="validation-errors"></span>
                                </div>
                            </div>

                            <div class="col-xs-12 no-padding ssl-checkbox">
                                <div id="enable-checkbox" class="col-xs-12 no-padding">
                                    @Html.CheckBox("secure-mail-authentication", (bool)isEnableSSL, new { @class = "material-checkbox", @id = "secure-mail-authentication" })
                                    @Html.Hidden("secure-mail-authentication")
                                    @Html.Label("secure-mail-authentication", string.Format(T["Enable {0}"].Value, "SSL"), new { @class = "app-textbox-label col-lg-2 col-md-2 col-sm-3 col-xs-4 no-padding" })
                                </div>
                            </div>
                        </form>
                        <div class="col-xs-12 no-padding">
                            <button id="test-mail-connection" class="primary-button app-btn-primary test-connection" data-container="body" title="@T["Test Email Settings Connection"]">@T["Test Connection"]</button>
                        </div>
                        <div id="test-mail-box" style="display: none;">
                            <div class="test-mail-info">@string.Format(T["Enter an email address and then click Send to verify that there are no issues with the {0} configuration."].Value, "SMTP")</div>
                            <form id="test-mail-form" class="row" autocomplete="off">
                                <div class="update-form-input-field col-xs-12 no-padding">
                                    @Html.Label("Email", T["Email Address"].Value, new { @class = "col-xs-12 no-padding" })
                                    <div class="form-input-field col-xs-12 no-padding">
                                        <input type="text" id="test-mail" class="form-control txt-holder validation-padding mail-settings-fields" maxlength="85" name="test-mail" placeholder="@T["To Email"]" />
                                        <span id="test-mail-validate" class="validation-message"></span>
                                    </div>
                                </div>
                            </form>
                            <div class="success-box" style="display: none;">
                                <img src="/bi/images/success-toast.svg" class="toast-image-container">
                                <div>@T["Email sent successfully"]</div>
                            </div>
                            <div class="mail-error-description">
                                <span id="copy-test-main-error-message" class="pull-right app-hyperlink" data-original-title="@T["Click to copy"]"><span class="su su-copy"></span></span>
                                <textarea id="test-main-error-message" class="form-control" name="text" readonly></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="bi-page-footer col-xs-12 no-padding">
                        <div class="bi-page-actions col-lg-12 col-md-12">
                            <a href="@Url.Action("Index","Home")" class="secondary-button app-btn-secondary pull-right" id="UpdateSystemSettingsCancel-bottom" title="">@T["Cancel"]</a>
                            <button type="button" title="" id="UpdateSystemSettings-bottom" name="UpdateSystemSettings" class="primary-button app-btn-primary pull-right update-mail-settings">
                                <span>@T["Save"]</span>
                            </button>
                        </div>
                    </div>
                </div>
                <div role="tabpanel" class="tab-pane col-md-12 col-xs-12 col-sm-12 bi-page-body @isLogsTab" id="logs">
                    @await Html.PartialAsync("_EmailActivityLog")
                </div>
                @await Html.PartialAsync("_EmailLogInfo")
            </div>
        </div>
        @await Html.PartialAsync("../Shared/_Footer", new ViewDataDictionary(ViewData) { { "appsettings", globalAppSettings } })
    </div>   
    <environment include="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/emailConfiguration.js"></script>
    </environment>
    <environment exclude="Development,CloudDevelopment">
        <script asp-append-version="true" src="@dashboardServerResourceUrl/cdn/scripts/emailConfiguration.min.js"></script>
    </environment>
}